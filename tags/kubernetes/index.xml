<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Kubernetes on ServiceMesher</title>
    <link>http://www.servicemesher.com/tags/kubernetes/</link>
    <description>Recent content in Kubernetes on ServiceMesher</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh</language>
    <lastBuildDate>Wed, 17 Apr 2019 11:23:34 +0800</lastBuildDate>
    
	<atom:link href="http://www.servicemesher.com/tags/kubernetes/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Kubernetes Ingress Controller的使用介绍及高可用落地</title>
      <link>http://www.servicemesher.com/blog/kubernetes-ingress-controller-deployment-and-ha/</link>
      <pubDate>Wed, 17 Apr 2019 11:23:34 +0800</pubDate>
      
      <guid>http://www.servicemesher.com/blog/kubernetes-ingress-controller-deployment-and-ha/</guid>
      <description>本文转载自zhangguanzhang的博客。 从之前对ingress controller到现在了解架构和一些经验总结下，顺带给人科普少走弯路</description>
    </item>
    
    <item>
      <title>kubernetes dashboard在ssl的各种场景下的手动部署</title>
      <link>http://www.servicemesher.com/blog/general-kubernetes-dashboard/</link>
      <pubDate>Wed, 17 Apr 2019 11:23:34 +0800</pubDate>
      
      <guid>http://www.servicemesher.com/blog/general-kubernetes-dashboard/</guid>
      <description>本文转载自zhangguanzhang的博客。 旨在面向新手讲解手动部署过程，本文dashboard的暴露不会用nodePort（不喜欢使用它</description>
    </item>
    
    <item>
      <title>Prometheus监控Kubernetes系列1——监控框架</title>
      <link>http://www.servicemesher.com/blog/prometheus-monitor-k8s-1/</link>
      <pubDate>Tue, 26 Mar 2019 11:12:00 +0800</pubDate>
      
      <guid>http://www.servicemesher.com/blog/prometheus-monitor-k8s-1/</guid>
      <description>背景 由于容器化和微服务的大力发展，Kubernetes基本已经统一了容器管理方案，当我们使用Kubernetes来进行容器化管理的时候，全面</description>
    </item>
    
    <item>
      <title>Prometheus监控Kubernetes系列2——监控部署</title>
      <link>http://www.servicemesher.com/blog/prometheus-monitor-k8s-2/</link>
      <pubDate>Tue, 26 Mar 2019 11:12:00 +0800</pubDate>
      
      <guid>http://www.servicemesher.com/blog/prometheus-monitor-k8s-2/</guid>
      <description>背景 由于容器化和微服务的大力发展，Kubernetes基本已经统一了容器管理方案，当我们使用Kubernetes来进行容器化管理的时候，全面</description>
    </item>
    
    <item>
      <title>Prometheus监控Kubernetes系列3——业务指标采集</title>
      <link>http://www.servicemesher.com/blog/prometheus-monitor-k8s-3/</link>
      <pubDate>Tue, 26 Mar 2019 11:12:00 +0800</pubDate>
      
      <guid>http://www.servicemesher.com/blog/prometheus-monitor-k8s-3/</guid>
      <description>背景 由于容器化和微服务的大力发展，Kubernetes基本已经统一了容器管理方案，当我们使用Kubernetes来进行容器化管理的时候，全面</description>
    </item>
    
    <item>
      <title>全手动部署prometheus-operator监控Kubernetes集群遇到的坑</title>
      <link>http://www.servicemesher.com/blog/prometheus-operator-manual/</link>
      <pubDate>Tue, 08 Jan 2019 17:40:30 +0800</pubDate>
      
      <guid>http://www.servicemesher.com/blog/prometheus-operator-manual/</guid>
      <description>写这篇文章原因 所有监控的agent底层最终都是查询的/proc和/sys里的信息推送(如果错了轻喷)，因为在Kubernetes中收集宿主机</description>
    </item>
    
    <item>
      <title>Kubernetes资源管理概述</title>
      <link>http://www.servicemesher.com/blog/kubernetes-resource-management/</link>
      <pubDate>Thu, 20 Dec 2018 15:14:54 +0800</pubDate>
      
      <guid>http://www.servicemesher.com/blog/kubernetes-resource-management/</guid>
      <description>本文转载自吴伟的博客。 kubernetes 资源简介 什么是资源？ 在 kubernetes 中，有两个基础但是非常重要的概念：node 和 pod。node 翻译成节点，是对集群资源的抽象；</description>
    </item>
    
    <item>
      <title>Istio中的服务和流量的抽象模型</title>
      <link>http://www.servicemesher.com/blog/istio-service-and-traffic-model/</link>
      <pubDate>Tue, 18 Dec 2018 19:49:56 +0800</pubDate>
      
      <guid>http://www.servicemesher.com/blog/istio-service-and-traffic-model/</guid>
      <description>本文转载自宋净超的博客。 本文介绍了 Istio 和 Kubernetes 中的一些服务和流量的抽象模型。虽然 Istio 一开始确定的抽象模型与对接的底层平台无关，但目前来看基本绑定 Ku</description>
    </item>
    
    <item>
      <title>如何从零开始编写一个Kubernetes CRD</title>
      <link>http://www.servicemesher.com/blog/kubernetes-crd-quick-start/</link>
      <pubDate>Wed, 12 Dec 2018 11:39:01 +0800</pubDate>
      
      <guid>http://www.servicemesher.com/blog/kubernetes-crd-quick-start/</guid>
      <description>本文首先向你简单介绍了 Kubernetes，然后教你从零开始构建一个 Kubernetes CRD。如果你已经对 Kubernetes 十分了解的话可以跳过本文前半部分的 Kubernetes 介绍，直接从</description>
    </item>
    
    <item>
      <title>为什么要选择Service Mesh？</title>
      <link>http://www.servicemesher.com/blog/why-is-service-mesh/</link>
      <pubDate>Thu, 08 Nov 2018 15:20:46 +0800</pubDate>
      
      <guid>http://www.servicemesher.com/blog/why-is-service-mesh/</guid>
      <description>除非你长期与世隔绝，否则你应该听说过Kubernetes，他已经称为高速发展的互联网公司的一条准则。最近又有一个热门话题&amp;ndash;Ser</description>
    </item>
    
    <item>
      <title>Kubernetes（K8s）的无服务器框架的评估</title>
      <link>http://www.servicemesher.com/blog/evaluation-of-serverless-frameworks-for-kbe/</link>
      <pubDate>Thu, 08 Nov 2018 13:20:46 +0800</pubDate>
      
      <guid>http://www.servicemesher.com/blog/evaluation-of-serverless-frameworks-for-kbe/</guid>
      <description>评估Kubernetes（K8s）的无服务器框架 Rancher 1.6和Rancher 2.0底层容器编排引擎的术语和概念略微有所不同。想要了解这些差异就需</description>
    </item>
    
    <item>
      <title>如何将云原生工作负载映射到Kubernetes中的控制器</title>
      <link>http://www.servicemesher.com/blog/how-to-map-cloud-native-workloads-to-kubernetes-controllers/</link>
      <pubDate>Wed, 31 Oct 2018 20:01:03 +0800</pubDate>
      
      <guid>http://www.servicemesher.com/blog/how-to-map-cloud-native-workloads-to-kubernetes-controllers/</guid>
      <description>Kubernetes 不仅仅是一个容器管理工具。它是一个平台，旨在处理包装在任意数量的容器和组合中的各种工作负载。Kubernetes内置了多个控制器，可映射到</description>
    </item>
    
    <item>
      <title>云原生可移植性的神话</title>
      <link>http://www.servicemesher.com/blog/myth-cloud-native-portability/</link>
      <pubDate>Tue, 30 Oct 2018 17:15:17 +0800</pubDate>
      
      <guid>http://www.servicemesher.com/blog/myth-cloud-native-portability/</guid>
      <description>本文最初发表于2017年5月24日。 随着大量新平台和支持工具的出现，云原生势头正在增长。 这些新平台为开发人员提供了越来越多的功能 ，可以以自动</description>
    </item>
    
    <item>
      <title>使用Go语言操作Istio和其他Kubernetes CRD</title>
      <link>http://www.servicemesher.com/blog/manipulating-istio-and-other-custom-kubernetes-resources-in-golang/</link>
      <pubDate>Mon, 15 Oct 2018 19:24:46 +0800</pubDate>
      
      <guid>http://www.servicemesher.com/blog/manipulating-istio-and-other-custom-kubernetes-resources-in-golang/</guid>
      <description>在本文中，我将演示如何使用Golang来操作Kubernetes Custom Resources，以Istio为例。 不需要您了解Istio，我只是用它来</description>
    </item>
    
    <item>
      <title>Istio和Kubernetes帮助Trulia房产网站消除单体架构增强微服务的可观测性</title>
      <link>http://www.servicemesher.com/blog/microservice-observability-with-istio/</link>
      <pubDate>Wed, 26 Sep 2018 15:49:30 +0800</pubDate>
      
      <guid>http://www.servicemesher.com/blog/microservice-observability-with-istio/</guid>
      <description>Trulia是一个多功能的房地产网站，为您提供有关待售房屋、出租公寓、邻里洞察、市场和趋势的本地独家新闻，以帮助您确切了解房屋购买、出售或出</description>
    </item>
    
    <item>
      <title>教程|使用Istio在Kubernetes集群中实现金丝雀部署</title>
      <link>http://www.servicemesher.com/blog/hands-on-canary-deployments-with-istio-and-kubernetes2/</link>
      <pubDate>Thu, 13 Sep 2018 20:26:56 +0800</pubDate>
      
      <guid>http://www.servicemesher.com/blog/hands-on-canary-deployments-with-istio-and-kubernetes2/</guid>
      <description>作为Istio教程第二篇文章本教程将一步步带领你熟悉指令并解释指令的作用。我们的前一篇文章解析了istio原理、示例，以及使用它给开发和运维</description>
    </item>
    
    <item>
      <title>在Play with Kubernetes平台上以测试驱动的方式部署Istio</title>
      <link>http://www.servicemesher.com/blog/test-drive-your-first-istio-deployment-using-play-with-kubernetes-platform-cloud-computing/</link>
      <pubDate>Fri, 07 Sep 2018 12:33:30 +0800</pubDate>
      
      <guid>http://www.servicemesher.com/blog/test-drive-your-first-istio-deployment-using-play-with-kubernetes-platform-cloud-computing/</guid>
      <description>作为一名全栈开发，假如最近花了不少时间开发应用，肯定已经理解了微服务架构下要面临的一系列全新挑战。尽管应用已经从庞大的单体应用转变成了开发更</description>
    </item>
    
    <item>
      <title>后Kubernetes时代的微服务</title>
      <link>http://www.servicemesher.com/blog/microservices-post-kubernetes/</link>
      <pubDate>Fri, 07 Sep 2018 12:27:58 +0800</pubDate>
      
      <guid>http://www.servicemesher.com/blog/microservices-post-kubernetes/</guid>
      <description>关键要点 微服务架构仍然是分布式系统最流行的架构风格。 但 Kubernetes 和云原生运动已经在很大程度上重新定义了应用程序的设计和开发。 在云原生平台上，服务的可</description>
    </item>
    
    <item>
      <title>教程|使用Istio实现一个Service Mesh以简化微服务间的通信模式</title>
      <link>http://www.servicemesher.com/blog/hands-on-canary-deployments-with-istio-and-kubernetes/</link>
      <pubDate>Thu, 30 Aug 2018 15:21:45 +0800</pubDate>
      
      <guid>http://www.servicemesher.com/blog/hands-on-canary-deployments-with-istio-and-kubernetes/</guid>
      <description>本文为该教程的第1部分。 如果你之前没有听说过Service Mesh，不用担心。虽然从可用文档、公开讨论和Github活跃度来看，它是一个相对</description>
    </item>
    
    <item>
      <title>使用Let’s Encrypt在Kubernetes上保护Istio的Ingress服务</title>
      <link>http://www.servicemesher.com/blog/securing-ingress-services-in-istio-with-lets-encrypt-on-kubernetes/</link>
      <pubDate>Mon, 20 Aug 2018 21:04:02 +0800</pubDate>
      
      <guid>http://www.servicemesher.com/blog/securing-ingress-services-in-istio-with-lets-encrypt-on-kubernetes/</guid>
      <description>使用Let’s Encrypt在Kubernetes上保护Istio的Ingress services 这是我在kubernetes之上部署Istio系列文章中</description>
    </item>
    
    <item>
      <title>基于Kubernetes和Istio的Serverless框架Knative解析之Autoscaler</title>
      <link>http://www.servicemesher.com/blog/knative-serving-autoscaler-single-tenancy-deep-dive/</link>
      <pubDate>Tue, 07 Aug 2018 22:20:49 +0800</pubDate>
      
      <guid>http://www.servicemesher.com/blog/knative-serving-autoscaler-single-tenancy-deep-dive/</guid>
      <description>我们都是知道Kubernetes中个资源对象叫 autoscaler，该对象在serverless架构中更是不可或缺，有了它可以负责应用的自动</description>
    </item>
    
    <item>
      <title>使用Istio 0.8对Kubernetes进行A/B测试</title>
      <link>http://www.servicemesher.com/blog/ab-testing-on-kubernetes-with-istio-0-8/</link>
      <pubDate>Fri, 13 Jul 2018 12:38:44 +0800</pubDate>
      
      <guid>http://www.servicemesher.com/blog/ab-testing-on-kubernetes-with-istio-0-8/</guid>
      <description>这是我们正在发布的系列文章中的第二篇，描述了我们在 Kubernetes 上采用 Istio 进行流量路由的经验。有关我们试图通过Vamp实现的更多详情以及我们选择 Istio 的原因，</description>
    </item>
    
  </channel>
</rss>